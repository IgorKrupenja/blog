name: Publish article

on:
  pull_request:
    types: ['opened', 'edited', 'reopened', 'synchronize', 'ready_for_review']

jobs:
  build:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 8
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --production

      - name: Create .env file
        run: |
          touch .env
          echo HASHNODE_URL=${{ vars.HASHNODE_URL }} >> .env
          echo HASHNODE_PUBLICATION_ID=${{ vars.HASHNODE_PUBLICATION_ID }} >> .env
          echo HASHNODE_TOKEN=${{ secrets.HASHNODE_TOKEN }} >> .env
          echo DEV_TO_KEY=${{ secrets.DEV_TO_KEY }} >> .env
          echo MEDIUM_AUTHOR_ID=${{ vars.MEDIUM_AUTHOR_ID }} >> .env
          echo MEDIUM_INTEGRATION_TOKEN=${{ secrets.MEDIUM_INTEGRATION_TOKEN }} >> .env
          echo SUPABASE_URL=${{ vars.SUPABASE_URL }} >> .env
          echo SUPABASE_KEY=${{ secrets.SUPABASE_KEY }} >> .env
          echo SUPABASE_STORAGE_BUCKET=${{ vars.SUPABASE_STORAGE_BUCKET }} >> .env

      - name: Build
        run: pnpm build
